[AConsts]

[AFunctions]
TimeToTick=" %s TimeToTick(%d, %d, %d);//Функция возвращает время в тиках"
Text_TimeToTick="Перевести Время в тики"
HTMLToKAMColor=" %s HTMLToKAMColor(%s, %s);//Функция преобразует цвет в KMR.|2 параметр указывает на добавления спец символов [$]"
Text_HTMLToKAMColor="Перевести цвет HTML в KMR (Hex BGR)"

[Events]
OnBeacon="//Occurs when a player places a beacon on the map.|procedure OnBeacon(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnBeacon="OnBeacon"
OnFieldBuilt="//Occurs when player built a field.|procedure OnFieldBuilt(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnFieldBuilt="OnFieldBuilt"
OnGroupHungry="//Occurs when the player would be shown a message about a group being hungry|//(when they first get hungry, then every 4 minutes after that if there are still hungry group members).|//Occurs regardless of whether the group has hunger messages enabled or not.|"
Text_OnGroupHungry="OnGroupHungry"
OnGroupOrderAttackHouse="//Occurs when the group gets order to attack house.|procedure OnGroupOrderAttackHouse(aGroup: Integer; aHouse: Integer);|begin|%s|end;"
Text_OnGroupOrderAttackHouse="OnGroupOrderAttackHouse"
OnOnGroupOrderAttackUnit="//Occurs when the group gets order to attack unit.|procedure OnGroupOrderAttackUnit(aGroup: Integer; aUnit: Integer);|begin|%s|end;"
Text_OnGroupOrderAttackUnit="OnGroupOrderAttackUnit"
OnGroupOrderLink="//Occurs when the group1 gets order to link to group2.|procedure OnGroupOrderLink(aGroup1: Integer; aGroup2: Integer);|begin|%s|end;"
Text_OnGroupOrderLink="OnGroupOrderLink"
OnGroupOrderMove="//Occurs when the group gets order to move to some point.|procedure OnGroupOrderMove(aGroup: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnGroupOrderMove="OnGroupOrderMove"
OnGroupOrderSplit="//Occurs when the group gets order to split.|procedure OnGroupOrderSplit(aGroup: Integer; aNewGroup: Integer);|begin|%s|end;"
Text_OnGroupOrderSplit="OnGroupOrderSplit"
OnHouseAfterDestroyed="//Occurs when a house is damaged by the enemy soldier.|//Attacker is -1 the house was damaged some other way, such as from Actions.HouseAddDamage.|procedure OnHouseAfterDestroyed(aHouseType: Integer; aOwner: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnHouseAfterDestroyed="OnHouseAfterDestroyed"
OnHouseBuilt="//Occurs when player has built a house.|procedure OnHouseBuilt(aHouse: Integer);|begin|%s|end;"
Text_OnHouseBuilt="OnHouseBuilt"
OnHouseDamaged="//Occurs when a house is damaged by the enemy soldier.|//Attacker is -1 the house was damaged some other way, such as from Actions.HouseAddDamage.|procedure OnHouseDamaged(aHouse: Integer; aAttacker: Integer);|begin|%s|end;"
Text_OnHouseDamaged="OnHouseDamaged"
OnHouseDestroyed="//Occurs when a house is destroyed.|//If DestroyerIndex is -1 the house was destroyed some other way, such as from Actions.HouseDestroy.|//If DestroyerIndex is the same as the house owner (States.HouseOwner), the house was demolished by the player who owns it.|//Otherwise it was destroyed by an enemy.|//Called just before the house is destroyed so HouseID is usable only during this event, and the area occupied by the house is still unusable.|procedure OnHouseDestroyed(aHouse: Integer; aDestroyerIndex: Integer);|begin|%s|end;"
Text_OnHouseDestroyed="OnHouseDestroyed"
OnHousePlanDigged="//Occurs when house plan is digged.|procedure OnHousePlanDigged(aHouse: Integer);|begin|%s|end;"
Text_OnHousePlanDigged="OnHousePlanDigged"
OnHousePlanPlaced="//Occurs when player has placed a house plan.|procedure OnHousePlanPlaced(aPlayer: Integer; aX: Word; aY: Word; aType: Word);|begin|%s|end;"
Text_OnHousePlanPlaced="OnHousePlanPlaced"
OnHousePlanRemoved="//Occurs when player has removed a house plan.|procedure OnHousePlanRemoved(aPlayer: Integer; aX: Word; aY: Word; aType: Word);|begin|%s|end;"
Text_OnHousePlanRemoved="OnHousePlanRemoved"
OnMarketTrade="//Occurs when a trade happens in a market (at the moment when resources are exchanged by serfs).|procedure OnMarketTrade(aMarket: Integer; aFrom: Word; aTo: Word);|begin|%s|end;"
Text_OnMarketTrade="OnMarketTrade"
OnMissionStart="//Occurs immediately after the mission is loaded.|procedure OnMissionStart;|begin|%s|end;"
Text_OnMissionStart="OnMissionStart"
OnPlanFieldPlaced="//Occurs when player has placed a field plan.|procedure OnPlanFieldPlaced(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanFieldPlaced="OnPlanFieldPlaced"
OnPlanFieldRemoved="//Occurs when player has removed a field plan.|procedure OnPlanFieldRemoved(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanFieldRemoved="OnPlanFieldRemoved"
OnPlanRoadDigged="//Occurs when road plan is digged.|procedure OnPlanRoadDigged(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanRoadDigged="OnPlanRoadDigged"
OnPlanRoadPlaced="//Occurs when player has placed a road plan.|procedure OnPlanRoadPlaced(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanRoadPlaced="OnPlanRoadPlaced"
OnPlanRoadRemoved="//Occurs when player has removed a road plan.|procedure OnPlanRoadRemoved(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanRoadRemoved="OnPlanRoadRemoved"
OnPlanWinefieldDigged="//Occurs when winefield is digged.|procedure OnPlanWinefieldDigged(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanWinefieldDigged="OnPlanWinefieldDigged"
OnPlanWinefieldPlaced="//Occurs when player has placed a wine field plan.|procedure OnPlanWinefieldPlaced(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanWinefieldPlaced="OnPlanWinefieldPlaced"
OnPlanWinefieldRemoved="//Occurs when player has removed a wine field plan.|procedure OnPlanWinefieldRemoved(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnPlanWinefieldRemoved="OnPlanWinefieldRemoved"
OnPlayerDefeated="//Occurs when certain player has been defeated.|//Defeat conditions are checked separately by Player AI.|procedure OnPlayerDefeated(aPlayer: Integer);|begin|%s|end;"
Text_OnPlayerDefeated="OnPlayerDefeated"
OnPlayerVictory="//Occurs when certain player is declared victorious.|//Victory conditions are checked separately by Player AI.|procedure OnPlayerVictory(aPlayer: Integer);|begin|%s|end;"
Text_OnPlayerVictory="OnPlayerVictory"
OnRoadBuilt="//Occurs when player built a road.|procedure OnRoadBuilt(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnRoadBuilt="OnRoadBuilt"
OnTick="//Occurs every game logic update.|procedure OnTick;|begin|%s|end;"
Text_OnTick="OnTick"
OnUnitAfterDied="//Occurs after a unit has died and has been completely removed from the game, meaning the tile it previously occupied can be used.|//If you need more information about the unit use the OnUnitDied event.|//Note: Because units have a death animation there is a delay of several ticks between OnUnitDied and OnUnitAfterDied.|procedure OnUnitAfterDied(aUnitType: Word; aOwner: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnUnitAfterDied="OnUnitAfterDied"
OnUnitAttacked="//Happens when a unit is attacked (shot at by archers or hit in melee).|//Attacker is always a warrior (could be archer or melee).|//This event will occur very frequently during battles.|procedure OnUnitAttacked(aUnit: Integer; aAttacker: Integer);|begin|%s|end;"
Text_OnUnitAttacked="OnUnitAttacked"
OnUnitDied="//Occurs when a unit dies. If KillerIndex is -1 the unit died from another cause such as hunger or Actions.UnitKill.|//Called just before the unit is killed so UnitID is usable only during this event,|//and the tile occupied by the unit is still taken.|procedure OnUnitDied(aUnit: Integer; aKillerOwner: Integer);|begin|%s|end;"
Text_OnUnitDied="OnUnitDied"
OnUnitTrained="//Occurs when player trains a unit.|procedure OnUnitTrained(aUnit: Integer);|begin|%s|end;"
Text_OnUnitTrained="OnUnitTrained"
OnUnitWounded="//Happens when unit is wounded.|//Attacker can be a warrior, recruit in tower or unknown (-1).|procedure OnUnitWounded(aUnit: Integer; aAttacker: Integer);|begin|%s|end;"
Text_OnUnitWounded="OnUnitWounded"
OnWareProduced="//Occurs when resource is produced for specified house.|procedure OnWareProduced(aHouse: Integer; aType: Word; aCount: Word);|begin|%s|end;"
Text_OnWareProduced="OnWareProduced"
OnWarriorEquipped="//Occurs when player equips a warrior.|procedure OnWarriorEquipped(aUnit: Integer; aGroup: Integer);|begin|%s|end;"
Text_OnWarriorEquipped="OnWarriorEquipped"
OnWarriorWalked="//Occurs when warrior walk.|procedure OnWarriorWalked(aUnit: Integer; aToX: Integer; aToY: Integer);|begin|%s|end;"
Text_OnWarriorWalked="OnWarriorWalked"
OnWinefieldBuilt="//Occurs when player built a winefield.|procedure OnWinefieldBuilt(aPlayer: Integer; aX: Word; aY: Word);|begin|%s|end;"
Text_OnWinefieldBuilt="OnWinefieldBuilt"

